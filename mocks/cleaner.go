// Code generated by MockGen. DO NOT EDIT.
// Source: cleaner.go

// Package mocks is a generated GoMock package.
package mocks

import (
	bytes "bytes"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
)

// MockOFXCleaner is a mock of Cleaner interface
type MockOFXCleaner struct {
	ctrl     *gomock.Controller
	recorder *MockOFXCleanerMockRecorder
}

// MockOFXCleanerMockRecorder is the mock recorder for MockOFXCleaner
type MockOFXCleanerMockRecorder struct {
	mock *MockOFXCleaner
}

// NewMockOFXCleaner creates a new mock instance
func NewMockOFXCleaner(ctrl *gomock.Controller) *MockOFXCleaner {
	mock := &MockOFXCleaner{ctrl: ctrl}
	mock.recorder = &MockOFXCleanerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockOFXCleaner) EXPECT() *MockOFXCleanerMockRecorder {
	return m.recorder
}

// Init mocks base method
func (m *MockOFXCleaner) Init(arg0 []byte) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Init", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// Init indicates an expected call of Init
func (mr *MockOFXCleanerMockRecorder) Init(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Init", reflect.TypeOf((*MockOFXCleaner)(nil).Init), arg0)
}

// CleanupXML mocks base method
func (m *MockOFXCleaner) CleanupXML() (*bytes.Buffer, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CleanupXML")
	ret0, _ := ret[0].(*bytes.Buffer)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CleanupXML indicates an expected call of CleanupXML
func (mr *MockOFXCleanerMockRecorder) CleanupXML() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CleanupXML", reflect.TypeOf((*MockOFXCleaner)(nil).CleanupXML))
}
